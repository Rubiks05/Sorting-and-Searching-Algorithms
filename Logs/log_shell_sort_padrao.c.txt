#include <stdio.h>
#include <stdlib.h>

int count_comparacoes = 0;
int count_trocas = 0;

long aleat (long min, long max) {

        return min + rand() % (max - min + 1);

}
void cria_vector(int vector[], int copia_vector[]) {

        for (int i=0 ; i<1024 ; i++) {
                vector[i] = aleat(0,2048);
                copia_vector[i] = vector[i];
        }
}
void imprime_parte(int vector[]) {

        for (int i=0 ; i<100 ; i++) printf("%d ", vector[i]);
        printf("\n");
}
void troca(int *xp, int *yp) {

        int temp = *xp;
        *xp = *yp;
        *yp = temp;
}
void shell_sort(int vector[], int n, int escolha_espacamento) {

        int gap;

        if (escolha_espacamento == 1) {
                for (gap = n / 2; gap > 0; gap /= 2) {
                        for (int i = gap; i < n; i++) {
                                int temp = vector[i];
                                int j;
                                for (j = i; j >= gap; j -= gap) {
                                        count_comparacoes++;
                                        if (vector[j - gap] <= temp) break;
                                                vector[j] = vector[j - gap];
                                                count_trocas++;
                                        }
                                vector[j] = temp;
                                if (j != i) count_trocas++;
                        }
                }
        }
        else if (escolha_espacamento == 2) {
                gap = 1;
                while (gap < n / 3) gap = 3 * gap + 1;
                while (gap > 0) {
                        for (int i = gap; i < n; i++) {
                                int temp = vector[i];
                                int j;
                                for (j = i; j >= gap; j -= gap) {
                                        count_comparacoes++;
                                        if (vector[j - gap] <= temp) break;
                                        vector[j] = vector[j - gap];
                                        count_trocas++;
                                }
                                vector[j] = temp;
                                if (j != i) count_trocas++;
                        }
                        gap /= 3;
                }
        }
}
int main() {

        int vector[1023];
        int copia_vector[1023];
        printf("Se deseja encerrar o programa digite 0.\n");
        printf("Caso contrário, digite 1 e o algoritmo criará um vetor e o ordenará: \n");
        int entrada = 1;
        while(entrada != 0) {
                scanf("%d", &entrada);
                cria_vector(vector, copia_vector);
                printf("VETOR CRIADO, 100 PRIMEIROS ELEMENTOS: ");
                imprime_parte(vector);
                printf("\n");
                shell_sort(vector, 1024, 1);
                printf("VETOR ORDENADO, 100 PRIMEIROS ELEMENTOS: ");
                imprime_parte(vector);
                printf("\n");
                printf("NÚMERO DE COMPARAÇÕES: %d\n", count_comparacoes);
                printf("NÚMERO DE TROCAS: %d\n", count_trocas);
                count_comparacoes = 0;
                count_trocas = 0;
                printf("\n");
        }
}

